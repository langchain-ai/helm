# This should match the namespace of the langsmith release
langsmithNamespace: "romain"

# This should match the release name of the langsmith release
langSmithReleaseName: "langsmith"

# ======================== Grafana ========================

# Values for Grafana: https://github.com/grafana/helm-charts/blob/main/charts/grafana/values.yaml
grafana:
  enabled: false
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Loki
          uid: loki
          type: loki
          url: http://{{ .Release.Name }}-loki-gateway
          isDefault: false
        - name: Mimir
          uid: prom
          type: prometheus
          url: http://{{ .Release.Name }}-mimir-nginx/prometheus
        - name: Tempo
          uid: tempo
          type: tempo
          url: http://{{ .Release.Name }}-tempo-query-frontend-discovery:3200
          isDefault: false
          jsonData:
            tracesToLogsV2:
              datasourceUid: loki
            lokiSearch:
              datasourceUid: loki
            tracesToMetrics:
              datasourceUid: prom
            serviceMap:
              datasourceUid: prom

# ======================== Kube State Metrics ========================

# Values for Kube State Metrics: https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-state-metrics/values.yaml
kubestatemetrics:
  enabled: false
  service:
    type: ClusterIP
    port: 8080
  namespaces: "romain"

# ======================== Loki ========================

# Values for Loki: https://github.com/grafana/loki/blob/main/production/helm/loki/values.yaml
loki:
  enabled: false
  deploymentMode: Distributed
  loki:
    auth_enabled: false # This just drops tenant based authentication header, and all logs are under tenant "fake"
    schemaConfig:
      configs:
        - from: "2024-04-01"
          store: tsdb
          object_store: s3
          schema: v13
          index:
            prefix: loki_index_
            period: 24h

    storage:
      type: s3
      bucketNames:
        chunks: langsmith-lgtm-stack
        ruler: langsmith-lgtm-stack
      s3:
        endpoint: {{ .Release.Name }}-minio.{{ .Release.Namespace }}.svc.cluster.local:9000
        secretAccessKey: admin_password
        accessKeyId: admin
        insecure: true
        s3ForcePathStyle: true # Required true for minio

    storage_config:
      object_prefix: loki
      aws:
        region: us-west-2
        bucketnames: langsmith-lgtm-stack
        s3forcepathstyle: true # Required true for minio

    ingester:
      chunk_encoding: snappy
      max_chunk_age: 10s
    querier:
      # Default is 4, if you have enough memory and CPU you can increase, reduce if OOMing
      max_concurrent: 4
  
  lokiCanary: # Disable as it runs as a daemonset. This is only used to periodically test that Loki is working. Log volume can also tell.
    enabled: false
  test:
    enabled: false

  ingester:
    replicas: 3
  querier:
    replicas: 3
    maxUnavailable: 2
  queryFrontend:
    replicas: 2
    maxUnavailable: 1
  queryScheduler:
    replicas: 2
  distributor:
    replicas: 3
    maxUnavailable: 2
  compactor:
    replicas: 1
  indexGateway:
    replicas: 2
    maxUnavailable: 1

  # optional experimental components
  bloomPlanner:
    replicas: 0
  bloomBuilder:
    replicas: 0
  bloomGateway:
    replicas: 0

  # Zero out replica counts of other deployment modes
  backend:
    replicas: 0
  read:
    replicas: 0
  write:
    replicas: 0

  singleBinary:
    replicas: 0

# ======================== Mimir ========================

# Values for Mimir: https://github.com/grafana/mimir/blob/main/operations/helm/charts/mimir-distributed/values.yaml
mimir:
  enabled: false
  minio:
    enabled: false
  mimir:
    structuredConfig:
      common:
         storage:
          backend: s3
          s3:
            endpoint: {{ .Release.Name }}-minio.{{ .Release.Namespace }}.svc.cluster.local:9000
            bucket_name: langsmith-lgtm-stack
            secret_access_key: admin_password
            access_key_id: admin
            s3forcepathstyle: true
            insecure: true

      blocks_storage:
        storage_prefix: mimirBlocks

      alertmanager_storage:
        storage_prefix: mimirAlertmanager

      ruler_storage:
        storage_prefix: mimirRuler

# ======================== Minio ========================

# Values for Minio: https://github.com/bitnami/charts/blob/main/bitnami/minio/values.yaml
minio:
  enabled: false
  mode: standalone
  replicas: 1
  persistence:
    enabled: true
    size: 10Gi
  readinessProbe:
    enabled: false
  auth:
    rootUser: "admin"
    rootPassword: "admin_password"
  defaultBuckets: "langsmith-lgtm-stack"


# ======================== Nginx Exporter ========================

# Values for the Nginx Exporter: https://github.com/prometheus-community/helm-charts/blob/main/charts/prometheus-nginx-exporter/values.yaml
nginxexporter:
  enabled: false
  service:
    type: ClusterIP
    port: 9113
  nginxServer: "http://langsmith-frontend.romain.svc.cluster.local:80/nginx_status"


# ======================== OTEL Collector ========================

otelCollector:
  name: "langsmith-collector"
  image:
    repository: otel/opentelemetry-collector-contrib
    tag: "0.123.0"
  
  serviceAccounts:
    - "langsmith-ace-backend"
    - "langsmith-backend"
    - "langsmith-clickhouse"
    - "langsmith-frontend"
    - "langsmith-platform-backend"
    - "langsmith-playground"
    - "langsmith-postgres"
    - "langsmith-queue"
    - "langsmith-redis"
  logs:
    enabled: false
  metrics:
    enabled: false
  traces:
    enabled: false

# ======================== Postgres Exporter ========================

# Values for the Postgres Exporter: https://github.com/prometheus-community/helm-charts/blob/main/charts/prometheus-postgres-exporter/values.yaml
postgresexporter:
  enabled: false
  service:
    type: ClusterIP
    port: 80
    targetPort: 9187
  config:
    datasource:
      host: langsmith-postgres.romain.svc.cluster.local
      user: postgres
      password: postgres
      database: postgres
      port: "5432"


# ======================== Redis Exporter ========================

# Values for the Redis Exporter: https://github.com/prometheus-community/helm-charts/blob/main/charts/prometheus-redis-exporter/values.yaml
redisexporter:
  enabled: false
  service:
    type: ClusterIP
    port: 9121
    portName: http
  redisAddress: langsmith-redis.romain.svc.cluster.local:6379

    
# ======================== Tempo ========================

# Values for Tempo: https://github.com/grafana/helm-charts/blob/main/charts/tempo-distributed/values.yaml
tempo:
  enabled: false
  storage:
    trace:
      backend: s3
      s3:
        access_key: admin
        secret_key: admin_password
        bucket: langsmith-lgtm-stack
        endpoint: {{ .Release.Name }}-minio.{{ .Release.Namespace }}.svc.cluster.local:9000
        s3forcepathstyle: true # Required true for minio
        insecure: true
        prefix: tempo

  # Specifies which trace protocols to accept by the gateway.
  traces:
    otlp:
      grpc:
        enabled: true
      http:
        enabled: true
    zipkin:
      enabled: false
    jaeger:
      thriftHttp:
        enabled: false
    opencensus:
      enabled: false
  
  metricsGenerator:
    enabled: true

