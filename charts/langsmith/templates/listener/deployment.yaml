{{- define "listenerEnvVars" -}}
- name: "REDIS_MAX_CONNECTIONS"
  value: "250"
- name: "ASYNCPG_POOL_MAX_SIZE"
  value: "3"
- name: "PORT"
  value: {{ .Values.listener.containerPort | quote }}
{{- end -}}
{{- $envVars := concat .Values.commonEnv (include "langsmith.commonEnv" . | fromYamlArray) (include "listenerEnvVars" . | fromYamlArray) .Values.listener.deployment.extraEnv -}}
{{- include "langsmith.detectDuplicates" $envVars -}}
{{- $volumes := concat .Values.commonVolumes .Values.listener.deployment.volumes (include "langsmith.tlsVolumes" . | fromYamlArray) -}}
{{- $volumeMounts := concat .Values.commonVolumeMounts .Values.listener.deployment.volumeMounts (include "langsmith.tlsVolumeMounts" . | fromYamlArray) -}}
{{- if .Values.config.deployment.enabled }}
{{- if .Values.listener.rollout.enabled }}
apiVersion: argoproj.io/v1alpha1
kind: Rollout
{{- else }}
apiVersion: apps/v1
kind: Deployment
{{- end }}
metadata:
  name: {{ include "langsmith.fullname" . }}-{{ .Values.listener.name }}
  namespace: {{ .Values.namespace | default .Release.Namespace }}
  labels:
    {{- include "langsmith.labels" . | nindent 4 }}
    {{- with.Values.listener.deployment.labels }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    {{- include "langsmith.annotations" . | nindent 4 }}
    {{- with.Values.listener.deployment.annotations }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  {{- if not .Values.listener.autoscaling.enabled }}
  replicas: {{ .Values.listener.deployment.replicas }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "langsmith.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: {{ include "langsmith.fullname" . }}-{{ .Values.listener.name }}
  template:
    metadata:
      annotations:
      {{- include "langsmith.commonPodAnnotations" . | nindent 8 }}
      {{- include "langsmith.checksumAnnotations" . | nindent 8 }}
      {{- with .Values.listener.deployment.annotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- with.Values.listener.deployment.labels }}
            {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- include "langsmith.labels" . | nindent 8 }}
        app.kubernetes.io/component: {{ include "langsmith.fullname" . }}-{{ .Values.listener.name }}
    spec:
      terminationGracePeriodSeconds: {{ .Values.listener.deployment.terminationGracePeriodSeconds }}
      {{- with .Values.images.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.listener.deployment.podSecurityContext | nindent 8 }}
      serviceAccountName: {{ include "listener.serviceAccountName" . }}
      restartPolicy: Always
      {{- with .Values.listener.deployment.initContainers }}
      initContainers:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Values.listener.name }}
          {{- with.Values.listener.deployment.command }}
          command:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            {{- with $envVars }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
          envFrom:
            - configMapRef:
                name: {{ include "langsmith.fullname" . }}-config
          image: {{ include "langsmith.image" (dict "Values" .Values "Chart" .Chart "component" "hostBackendImage") | quote }}
          imagePullPolicy: {{ .Values.images.hostBackendImage.pullPolicy }}
          ports:
            - name: listener
              containerPort: {{ .Values.listener.containerPort }}
              protocol: TCP
          {{- with .Values.listener.deployment.startupProbe }}
          startupProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.listener.deployment.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.listener.deployment.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.listener.deployment.resources | nindent 12 }}
          securityContext:
            {{- toYaml .Values.listener.deployment.securityContext | nindent 12 }}
          {{- with $volumeMounts }}
          volumeMounts:
              {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.listener.deployment.extraContainerConfig }}
            {{- toYaml . | nindent 10 }}
          {{- end }}
        {{- with .Values.listener.deployment.sidecars }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.listener.deployment.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.listener.deployment.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.listener.deployment.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.listener.deployment.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- if .Values.listener.rollout.enabled }}
  strategy:
    {{- toYaml .Values.listener.rollout.strategy | nindent 4 }}
{{- end }}
{{- end }}
