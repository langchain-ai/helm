{{- define "validatePassword" -}}
{{- $password := .Values.config.basicAuth.initialOrgAdminPassword -}}
{{- if lt (len $password) 12 -}}
  {{- fail "Error: Admin password must be at least 12 characters long" -}}
{{- end -}}
{{- if not (regexMatch "[a-z]" $password) -}}
  {{- fail "Error: Admin password must contain at least one lowercase letter" -}}
{{- end -}}
{{- if not (regexMatch "[A-Z]" $password) -}}
  {{- fail "Error: Admin password must contain at least one uppercase letter" -}}
{{- end -}}
{{- if not (regexMatch `[!#$%()+,./:?@\[\]\\^_{~}-]` $password) -}}
  {{- fail "Error: Admin password must contain at least one symbol from: !#$%()+,-./:?@[\\]^_{~}" -}}
{{- end -}}
{{- end -}}

{{- define "authBootstrapEnvVars" -}}
- name: INITIAL_ORG_ADMIN_EMAIL
  value: {{ .Values.config.basicAuth.initialOrgAdminEmail }}
- name: INITIAL_ORG_ADMIN_PASSWORD
  valueFrom:
    secretKeyRef:
      name: {{ include "langsmith.secretsName" . }}
      key: initial_org_admin_password
{{- end -}}
{{- if .Values.config.basicAuth.enabled }}
{{- if not .Values.config.existingSecretName }}
{{- template "validatePassword" . -}}
{{- end }}
{{- $envVars := concat .Values.commonEnv (include "langsmith.commonEnv" . | fromYamlArray) (include "authBootstrapEnvVars" . | fromYamlArray) .Values.backend.authBootstrap.extraEnv -}}
{{- include "langsmith.detectDuplicates" $envVars -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "langsmith.fullname" . }}-{{ .Values.backend.name }}-auth-bootstrap{{ ternary (printf "-%s" (randAlphaNum 5 | lower)) ""  .Values.backend.authBootstrap.randomizeName }}
  labels:
    {{- include "langsmith.labels" . | nindent 4 }}
    {{- with.Values.backend.authBootstrap.labels }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    "helm.sh/hook": post-install, post-upgrade
    "helm.sh/hook-weight": "0"
    "argocd.argoproj.io/hook": "PostSync"
    {{- include "langsmith.annotations" . | nindent 4 }}
    {{- with.Values.backend.authBootstrap.annotations }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  backoffLimit: 3
  ttlSecondsAfterFinished: {{ .Values.backend.authBootstrap.ttlSecondsAfterFinished }}
  template:
    metadata:
      {{- with .Values.backend.authBootstrap.annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- with.Values.backend.authBootstrap.labels }}
            {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- include "langsmith.labels" . | nindent 8 }}
        app.kubernetes.io/component: {{ include "langsmith.fullname" . }}-{{ .Values.backend.name }}
    spec:
      restartPolicy: Never
      {{- with .Values.images.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.backend.authBootstrap.podSecurityContext | nindent 8 }}
      serviceAccountName: {{ include "backend.serviceAccountName" . }}
      {{- with .Values.backend.authBootstrap.initContainers }}
      initContainers:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: auth-bootstrap
          {{- with .Values.backend.authBootstrap.command }}
          command:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            {{- with $envVars }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
          envFrom:
            - configMapRef:
                name: {{ include "langsmith.fullname" . }}-config
          image: {{ include "langsmith.image" (dict "Values" .Values "Chart" .Chart "component" "backendImage") | quote }}
          imagePullPolicy: {{ .Values.images.backendImage.pullPolicy }}
          resources:
            {{- toYaml .Values.backend.authBootstrap.resources | nindent 12 }}
          securityContext:
            {{- toYaml .Values.backend.authBootstrap.securityContext | nindent 12 }}
          {{- with .Values.backend.authBootstrap.volumeMounts }}
          volumeMounts:
              {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.backend.authBootstrap.extraContainerConfig }}
            {{- toYaml . | nindent 10 }}
          {{- end }}
        {{- with .Values.backend.authBootstrap.sidecars }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.backend.authBootstrap.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backend.authBootstrap.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backend.authBootstrap.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backend.authBootstrap.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backend.authBootstrap.volumes }}
      volumes:
          {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
