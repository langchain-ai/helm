{{- if and (.Values.postgres.requireSecret) (not .Values.postgres.existingSecretName) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "langsmith.postgresSecretsName" .}}
  namespace: {{ .Values.namespace | default .Release.Namespace }}
  labels:
    {{- include "langsmith.labels" . | nindent 4 }}
  annotations:
    {{- include "langsmith.annotations" . | nindent 4 }}
data:
  {{- if .Values.postgres.external.enabled }}
  {{- if .Values.postgres.external.connectionUrl }}
  connection_url: {{ .Values.postgres.external.connectionUrl | b64enc }}
  {{- else }}
  connection_url: {{ printf "%s:%s@%s:%s/%s" .Values.postgres.external.user .Values.postgres.external.password .Values.postgres.external.host (toString .Values.postgres.external.port) .Values.postgres.external.database | b64enc }}
  {{- end }}
  {{- else }}
  postgres_user: {{ .Values.postgres.external.user | b64enc }}
  postgres_password: {{ .Values.postgres.external.password | b64enc }}
  postgres_db: {{ .Values.postgres.external.database | b64enc }}
  connection_url: {{ printf "%s:%s@%s-%s.%s.svc.%s:%s/%s" .Values.postgres.external.user .Values.postgres.external.password (include "langsmith.fullname" .) .Values.postgres.name .Release.Namespace .Values.clusterDomain (toString .Values.postgres.service.port) .Values.postgres.external.database | b64enc }}
  {{- end}}
{{- end }}
