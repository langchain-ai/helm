apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "langsmith.fullname" . }}-{{ .Values.frontend.name }}
  labels:
    {{- include "langsmith.labels" . | nindent 4 }}
  annotations:
    {{- include "langsmith.annotations" . | nindent 4 }}
data:
{{- if .Values.ingress.subdomain }}
  nginx.conf: |
    proxy_ssl_server_name on;

    proxy_cache_path /tmp/server_cache levels=1:2 keys_zone=llm_cache:100m max_size=1g inactive=60 use_temp_path=off;

    log_format cache_log_json escape=json
    '{'
        '"remote_addr":"$remote_addr",'
        '"remote_user":"$remote_user",'
        '"time_local":"$time_local",'
        '"request":"$request",'
        '"status":$status,'
        '"body_bytes_sent":$body_bytes_sent,'
        '"http_referer":"$http_referer",'
        '"http_user_agent":"$http_user_agent",'
        '"cache_status":"$upstream_cache_status"'
    '}';

    {{- if .Values.frontend.ssl.enabled }}
    # HTTP server for health checks only
    server {
        listen       {{ .Values.frontend.containerPort }};
        {{- if .Values.frontend.ipv6Enabled }}
        listen  [::]:{{ .Values.frontend.containerPort }};
        {{- end }}
        server_name  localhost;

        # Only allow health checks on HTTP
        location = /health {
            access_log off;
            return 200;
        }

        # Redirect everything else to HTTPS
        location / {
            return 301 https://$host:{{ .Values.frontend.ssl.port }}$request_uri;
        }
    }
   {{- end }}

    server {
        {{- if .Values.frontend.ssl.enabled }}
        listen       {{ .Values.frontend.ssl.port }} ssl;
        {{- if .Values.frontend.ipv6Enabled }}
        listen  [::]:{{ .Values.frontend.ssl.port }} ssl;
        {{- end }}

        ssl_certificate     {{ .Values.frontend.ssl.certificatePath }};
        ssl_certificate_key {{ .Values.frontend.ssl.keyPath }};

        {{- else }}
        listen       {{ .Values.frontend.containerPort }};
        {{- if .Values.frontend.ipv6Enabled }}
        listen  [::]:{{ .Values.frontend.containerPort }};
        {{- end }}
        {{- end }}

        server_name  localhost;
        client_max_body_size {{ .Values.frontend.maxBodySize }};
        proxy_read_timeout {{ .Values.frontend.proxyReadTimeout }};
        proxy_connect_timeout {{ .Values.frontend.proxyConnectTimeout }};
        proxy_send_timeout {{ .Values.frontend.proxyWriteTimeout }};
        keepalive_timeout {{ .Values.frontend.keepAliveTimeout }};

        add_header Content-Security-Policy "frame-ancestors 'self'; object-src 'none'" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

        access_log /var/log/nginx/access.log cache_log_json;

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /tmp;
        }

        location = /health {
                # health checks are frequent and boring, so we avoid logging them
                access_log off;
                return 200;
         }

        location = /nginx_status {
            stub_status on;
            access_log off;
        }

        location ~ /{{ .Values.ingress.subdomain }}/api/v1/playground/ {
            rewrite /{{ .Values.ingress.subdomain }}/api/v1/playground/(.*) /playground/$1  break;
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_cache off;
            proxy_pass http://{{ include "langsmith.fullname" . }}-{{ .Values.playground.name }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.playground.service.port }};
        }

        # Platform Backend Routes
        location ~ /{{ .Values.ingress.subdomain }}/api/v1/platform/ {
            rewrite /{{ .Values.ingress.subdomain }}/api/v1/platform/(.*) /v1/platform/$1  break;
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_cache off;
            proxy_pass http://{{ include "langsmith.fullname" . }}-{{ .Values.platformBackend.name }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.platformBackend.service.port }};
        }

        location ~ /{{ .Values.ingress.subdomain }}/api/v1/otel/ {
            rewrite /{{ .Values.ingress.subdomain }}/api/v1/otel/(.*) /otel/$1  break;
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_cache off;
            proxy_pass http://{{ include "langsmith.fullname" . }}-{{ .Values.platformBackend.name }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.platformBackend.service.port }};
        }

        location = /{{ .Values.ingress.subdomain }}/api/v1/runs/multipart {
            rewrite /{{ .Values.ingress.subdomain }}/api/v1/runs/multipart /runs/multipart  break;
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_cache off;
            proxy_pass http://{{ include "langsmith.fullname" . }}-{{ .Values.platformBackend.name }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.platformBackend.service.port }};
        }

        location = /{{ .Values.ingress.subdomain }}/api/v1/runs/batch {
            rewrite /{{ .Values.ingress.subdomain }}/api/v1/runs/batch /runs/batch  break;
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_cache off;
            proxy_pass http://{{ include "langsmith.fullname" . }}-{{ .Values.platformBackend.name }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.platformBackend.service.port }};
        }

        location = /{{ .Values.ingress.subdomain }}/api/v1/runs {
            rewrite /{{ .Values.ingress.subdomain }}/api/v1/runs /runs  break;
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_cache off;
            proxy_pass http://{{ include "langsmith.fullname" . }}-{{ .Values.platformBackend.name }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.platformBackend.service.port }};
        }

        location = /{{ .Values.ingress.subdomain }}/api/v1/info {
            rewrite /{{ .Values.ingress.subdomain }}/api/v1/info /info  break;
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_cache off;
            proxy_pass http://{{ include "langsmith.fullname" . }}-{{ .Values.platformBackend.name }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.platformBackend.service.port }};
        }

        location ~ /{{ .Values.ingress.subdomain }}/api/v1/auth {
            rewrite /{{ .Values.ingress.subdomain }}/api/v1/(.*) /$1  break;
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_cache off;
            proxy_pass http://{{ include "langsmith.fullname" . }}-{{ .Values.platformBackend.name }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.platformBackend.service.port }};
        }

        location ~ /{{ .Values.ingress.subdomain }}/api/public {
            rewrite /{{ .Values.ingress.subdomain }}/api/public/(.*) /public/$1 break;
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_cache off;
            proxy_pass http://{{ include "langsmith.fullname" . }}-{{ .Values.platformBackend.name }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.platformBackend.service.port }};
        }

        # Backend Routes
        location ~ /{{ .Values.ingress.subdomain }}/api/v1 {
            rewrite /{{ .Values.ingress.subdomain }}/api/v1/(.*) /api/v1/$1  break;
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_cache off;
            proxy_pass http://{{ include "langsmith.fullname" . }}-{{ .Values.backend.name }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.backend.service.port }};
        }

    {{- if .Values.config.langgraphPlatform.enabled }}
        location ~ /{{ .Values.ingress.subdomain }}/api-host {
            rewrite /{{ .Values.ingress.subdomain }}/api-host/(.*) /$1  break;
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_cache off;
            proxy_pass http://{{ include "langsmith.fullname" . }}-{{ .Values.hostBackend.name }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.hostBackend.service.port }};
        }
    {{- end }}

        location = /{{ .Values.ingress.subdomain }}/api/runs/multipart {
            rewrite /{{ .Values.ingress.subdomain }}/api/runs/multipart /runs/multipart  break;
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_cache off;
            proxy_pass http://{{ include "langsmith.fullname" . }}-{{ .Values.platformBackend.name }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.platformBackend.service.port }};
        }

        location = /{{ .Values.ingress.subdomain }}/api/runs/batch {
            rewrite /{{ .Values.ingress.subdomain }}/api/runs/batch /runs/batch  break;
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_cache off;
            proxy_pass http://{{ include "langsmith.fullname" . }}-{{ .Values.platformBackend.name }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.platformBackend.service.port }};
        }

        location = /{{ .Values.ingress.subdomain }}/api/runs {
            rewrite /{{ .Values.ingress.subdomain }}/api/runs /runs  break;
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_cache off;
            proxy_pass http://{{ include "langsmith.fullname" . }}-{{ .Values.platformBackend.name }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.platformBackend.service.port }};
        }

        # Deprecated Backend Routes
        location ~ /{{ .Values.ingress.subdomain }}/api {
            rewrite /{{ .Values.ingress.subdomain }}/api/(.*) /api/v1/$1  break;
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_cache off;
            proxy_pass http://{{ include "langsmith.fullname" . }}-{{ .Values.backend.name }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.backend.service.port }};
        }

        location = /{{ .Values.ingress.subdomain }}/api/docs {
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_cache off;
            proxy_pass http://{{ include "langsmith.fullname" . }}-{{ .Values.backend.name }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.backend.service.port }};
        }

        location = /{{ .Values.ingress.subdomain }}/api/redoc {
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_cache off;
            proxy_pass http://{{ include "langsmith.fullname" . }}-{{ .Values.backend.name }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.backend.service.port }};
        }

        location = /{{ .Values.ingress.subdomain }}/api/openapi.json {
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_cache off;
            proxy_pass http://{{ include "langsmith.fullname" . }}-{{ .Values.backend.name }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.backend.service.port }};
        }

        location = /{{ .Values.ingress.subdomain }} {
            absolute_redirect off;
            rewrite ^ /{{ .Values.ingress.subdomain }}/ permanent;
        }

        location ~ /{{ .Values.ingress.subdomain }} {
            root   /tmp;
            index  index.html index.htm;
            try_files $uri $uri/ /{{ .Values.ingress.subdomain }}/index.html;
        }
    }
{{- else }}
  nginx.conf: |
    proxy_ssl_server_name on;

    proxy_cache_path /tmp/server_cache levels=1:2 keys_zone=llm_cache:100m max_size=1g inactive=60 use_temp_path=off;

    log_format cache_log_json escape=json
    '{'
        '"remote_addr":"$remote_addr",'
        '"remote_user":"$remote_user",'
        '"time_local":"$time_local",'
        '"request":"$request",'
        '"status":$status,'
        '"body_bytes_sent":$body_bytes_sent,'
        '"http_referer":"$http_referer",'
        '"http_user_agent":"$http_user_agent",'
        '"cache_status":"$upstream_cache_status"'
    '}';

    {{- if .Values.frontend.ssl.enabled }}
    # HTTP server for health checks only
    server {
        listen       {{ .Values.frontend.containerPort }};
        {{- if .Values.frontend.ipv6Enabled }}
        listen  [::]:{{ .Values.frontend.containerPort }};
        {{- end }}
        server_name  localhost;

        # Only allow health checks on HTTP
        location = /health {
            access_log off;
            return 200;
        }

        # Redirect everything else to HTTPS
        location / {
            return 301 https://$host:{{ .Values.frontend.ssl.port }}$request_uri;
        }
    }
   {{- end }}

    server {
        {{- if .Values.frontend.ssl.enabled }}
        listen       {{ .Values.frontend.ssl.port }} ssl;
        {{- if .Values.frontend.ipv6Enabled }}
        listen  [::]:{{ .Values.frontend.ssl.port }} ssl;
        {{- end }}

        ssl_certificate     {{ .Values.frontend.ssl.certificatePath }};
        ssl_certificate_key {{ .Values.frontend.ssl.keyPath }};

        {{- else }}
        listen       {{ .Values.frontend.containerPort }};
        {{- if .Values.frontend.ipv6Enabled }}
        listen  [::]:{{ .Values.frontend.containerPort }};
        {{- end }}
        {{- end }}

        server_name  localhost;
        client_max_body_size {{ .Values.frontend.maxBodySize }};
        proxy_read_timeout {{ .Values.frontend.proxyReadTimeout }};
        proxy_connect_timeout {{ .Values.frontend.proxyConnectTimeout }};
        proxy_send_timeout {{ .Values.frontend.proxyWriteTimeout }};
        keepalive_timeout {{ .Values.frontend.keepAliveTimeout }};

        add_header Content-Security-Policy "frame-ancestors 'self'; object-src 'none'" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

        access_log /var/log/nginx/access.log cache_log_json;

        location / {
            root   /tmp/build;
            index  index.html index.htm;
            try_files $uri $uri/ /index.html;
        }

        location = /health {
                  # health checks are frequent and boring, so we avoid logging them
                  access_log off;
                  return 200;
        }

        location = /nginx_status {
            stub_status on;
            access_log off;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /tmp/build;
        }

        location ~ /api/v1/playground/ {
            rewrite /api/v1/playground/(.*) /playground/$1  break;
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_cache off;
            proxy_pass http://{{ include "langsmith.fullname" . }}-{{ .Values.playground.name }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.playground.service.port }};
        }

        # Platform Backend Routes
        location ~ /api/v1/platform/ {
            rewrite /api/v1/platform/(.*) /v1/platform/$1  break;
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_cache off;
            proxy_pass http://{{ include "langsmith.fullname" . }}-{{ .Values.platformBackend.name }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.platformBackend.service.port }};
        }

        location ~ /api/v1/otel/ {
            rewrite /api/v1/otel/(.*) /otel/$1  break;
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_cache off;
            proxy_pass http://{{ include "langsmith.fullname" . }}-{{ .Values.platformBackend.name }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.platformBackend.service.port }};
         }

        location = /api/v1/runs/multipart {
            rewrite /api/v1/runs/multipart /runs/multipart  break;
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_cache off;
            proxy_pass http://{{ include "langsmith.fullname" . }}-{{ .Values.platformBackend.name }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.platformBackend.service.port }};
        }

        location = /api/v1/runs/batch {
            rewrite /api/v1/runs/batch /runs/batch  break;
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_cache off;
            proxy_pass http://{{ include "langsmith.fullname" . }}-{{ .Values.platformBackend.name }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.platformBackend.service.port }};
        }

        location = /api/v1/runs {
            rewrite /api/v1/runs /runs  break;
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_cache off;
            proxy_pass http://{{ include "langsmith.fullname" . }}-{{ .Values.platformBackend.name }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.platformBackend.service.port }};
        }

        location = /api/v1/info {
            rewrite /api/v1/info /info  break;
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_cache off;
            proxy_pass http://{{ include "langsmith.fullname" . }}-{{ .Values.platformBackend.name }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.platformBackend.service.port }};
         }

         location ~ /api/v1/auth {
            rewrite /api/v1/(.*) /$1  break;
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_cache off;
            proxy_pass http://{{ include "langsmith.fullname" . }}-{{ .Values.platformBackend.name }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.platformBackend.service.port }};
         }

        location ~ /api/public {
            rewrite /api/public/(.*) /public/$1  break;
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_cache off;
            proxy_pass http://{{ include "langsmith.fullname" . }}-{{ .Values.platformBackend.name }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.platformBackend.service.port }};
        }

        # Backend Routes
        location ~ /api/v1 {
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_cache off;
            proxy_pass http://{{ include "langsmith.fullname" . }}-{{ .Values.backend.name }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.backend.service.port }};
        }

    {{- if .Values.config.langgraphPlatform.enabled }}
        location ~ /api-host {
            rewrite /api-host/(.*) /$1  break;
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_cache off;
            proxy_pass http://{{ include "langsmith.fullname" . }}-{{ .Values.hostBackend.name }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.hostBackend.service.port }};
        }
    {{- end }}

        location = /api/runs/multipart {
            rewrite /api/runs/multipart /runs/multipart  break;
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_cache off;
            proxy_pass http://{{ include "langsmith.fullname" . }}-{{ .Values.platformBackend.name }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.platformBackend.service.port }};
        }

        location = /api/runs/batch {
            rewrite /api/runs/batch /runs/batch  break;
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_cache off;
            proxy_pass http://{{ include "langsmith.fullname" . }}-{{ .Values.platformBackend.name }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.platformBackend.service.port }};
        }

        location = /api/runs {
            rewrite /api/runs /runs  break;
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_cache off;
            proxy_pass http://{{ include "langsmith.fullname" . }}-{{ .Values.platformBackend.name }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.platformBackend.service.port }};
        }

        # Deprecated Backend Routes To be removed in v8
        location ~ /api {
            rewrite /api/(.*) /api/v1/$1  break;
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_cache off;
            proxy_pass http://{{ include "langsmith.fullname" . }}-{{ .Values.backend.name }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.backend.service.port }};
       }

        location = /api/docs {
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_cache off;
            proxy_pass http://{{ include "langsmith.fullname" . }}-{{ .Values.backend.name }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.backend.service.port }};
        }

        location = /api/redoc {
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_cache off;
            proxy_pass http://{{ include "langsmith.fullname" . }}-{{ .Values.backend.name }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.backend.service.port }};
        }

        location = /api/openapi.json {
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_cache off;
            proxy_pass http://{{ include "langsmith.fullname" . }}-{{ .Values.backend.name }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.backend.service.port }};
        }
      }
{{- end }}
